{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { updateCart } from '../utils/cartUtils';\nconst initialState = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x._id === item._id);\n      if (existItem) {\n        state.cartItems = state.cartItems.map(x => x._id === existItem._id ? item : x);\n      } else {\n        state.cartItems = [...state.cartItems, item];\n      }\n      return updateCart(state);\n    },\n    removeFromCart: (state, action) => {\n      state.cartItems = state.cartItems.filter(x => x._id !== action.payload);\n    }\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","updateCart","initialState","localStorage","getItem","JSON","parse","cartItems","cartSlice","name","reducers","addToCart","state","action","item","payload","existItem","find","x","_id","map","removeFromCart","filter","actions","reducer"],"sources":["C:/Users/ED/fullcrudclass/frontend/src/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { updateCart } from '../utils/cartUtils'\r\n\r\nconst initialState = localStorage.getItem('cart')\r\n  ? JSON.parse(localStorage.getItem('cart'))\r\n  : { cartItems: [] }\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x._id === item._id)\r\n\r\n      if (existItem) {\r\n        state.cartItems = state.cartItems.map((x) =>\r\n          x._id === existItem._id ? item : x\r\n        )\r\n      } else {\r\n        state.cartItems = [...state.cartItems, item]\r\n      }\r\n\r\n      return updateCart(state)\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      state.cartItems = state.cartItems.filter((x) => x._id !== action.payload)\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addToCart } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAC7CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GACxC;EAAEG,SAAS,EAAE;AAAG,CAAC;AAErB,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAE3B,MAAMC,SAAS,GAAGJ,KAAK,CAACL,SAAS,CAACU,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,IAAI,CAACK,GAAG,CAAC;MAEjE,IAAIH,SAAS,EAAE;QACbJ,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACa,GAAG,CAAEF,CAAC,IACtCA,CAAC,CAACC,GAAG,KAAKH,SAAS,CAACG,GAAG,GAAGL,IAAI,GAAGI,CACnC,CAAC;MACH,CAAC,MAAM;QACLN,KAAK,CAACL,SAAS,GAAG,CAAC,GAAGK,KAAK,CAACL,SAAS,EAAEO,IAAI,CAAC;MAC9C;MAEA,OAAOb,UAAU,CAACW,KAAK,CAAC;IAC1B,CAAC;IACDS,cAAc,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACe,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKN,MAAM,CAACE,OAAO,CAAC;IAC3E;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAU,CAAC,GAAGH,SAAS,CAACe,OAAO;AAE9C,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}